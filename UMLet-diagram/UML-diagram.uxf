<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>830</x>
      <y>820</y>
      <w>200</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>CloudEasyN
--


--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>210</y>
      <w>360</w>
      <h>530</h>
    </coordinates>
    <panel_attributes>&lt;Abstract&gt; Cloud
--
+SceneryItem spriteImage;
+vector&lt;SceneryItem&gt; spriteList;
+vector&lt;SceneryItem&gt; keyItemList;
+float timer = 1;
+float speed;
+bool isTimeOut;
+bool isEntered;
+bool isRight;
+bool isBoss;
+Color color;
+int currentKeyIndice;
+vector&lt;enum sf::Keyboard::Key&gt; alterKeyList;

--
-void update();

-void drawLetter(sf::RenderTarget &amp;target);

-void setPosition(float x, float y);
-void setSize(float x, float y);
-void setColor(sf::Color newcolor);
-void setTexture(std::string texture);
-void setSpeed(float newSpeed);

-void addKey(enum sf::Keyboard::Key key);
-void addSprite(SceneryItem newSprite);

-bool tryKeyInput(enum sf::Keyboard::Key key);

-bool isDone();
-bool getIsTimeOut();</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>730</y>
      <w>130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>530</x>
      <y>110</y>
      <w>270</w>
      <h>350</h>
    </coordinates>
    <panel_attributes>&lt;Abstract&gt; User
--
+sprite : SceneryItem
+health : int

--
-void updateTexture(bool isRight);

-void init();

-void setPosition(float x, float y);
-sf::Vector2f getPosition();
-void setSize(float x, float y);
-sf::Vector2f getSize();
-void setSprite(std::string pathToSprite);
-void setHealth(int a);
-int getHealth();

-void incrHealth(int a);
-void decrHealth(int a);

-bool isGameOver();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>630</x>
      <y>450</y>
      <w>110</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>10</y>
      <w>320</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;Abstract&gt; Item
--


--
-void draw(sf::RenderTarget &amp;target);
-void update(float time);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>150</y>
      <w>260</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>SceneryItem
--
+RectangleShape shape;
+string pathToSprite;

--
-void setTexture(std::string texture);
-void setPath(std::string newPath);
-void setPosition(float x, float y);
-void setColor(sf::Color newColor);
-void setSize(float x, float y);
-void setSprite(std::string pathToSprite);

-sf::Vector2f getPosition();
-sf::Vector2f getSize();
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>30</x>
      <y>70</y>
      <w>440</w>
      <h>740</h>
    </coordinates>
    <panel_attributes>Engine
--
+std::vector&lt;int&gt; topScores;
+sf::Text menuTitle;
+sf::Text vagueTitle;
+sf::Text failTitle;
+sf::Font fontLoaded;
+bool isGameLaunched;
+bool isRight;
+bool gameEnded;
+bool hardMod;
+int vague;
+int phase;
+int numberOfSpawnedClouds;
+int numberOfSpawnedBoss;
+float timeUntilNextSpawn;
+Sculptor sculptor;
+vector&lt;unique_ptr&lt;Cloud&gt;&gt; listOfClouds;
+vector&lt;unique_ptr&lt;Cloud&gt;&gt; listOfOldClouds;
+vector&lt;unique_ptr&lt;SceneryItem&gt;&gt; listOfHUDItems;
+vector&lt;unique_ptr&lt;SceneryItem&gt;&gt; listOfBackgroundItems;
+vector&lt;unique_ptr&lt;SceneryItem&gt;&gt; listOfBackgroundItemsMainMenu;

--
-void init();

-void launchMainMenu();
-void drawMainMenu(sf::RenderWindow &amp;renderer);

-void newGame();
-void endGame();

-void createNewCloud(int cloudToCreate);
-void createNewRandomEasy();
-void deleteCloudsDone();
-void deleteCloudsOld();

-bool isHPLost(bool isCloudRight, bool isBoss, int posXcloud);
-void update(float time);
-void drawAllInGame(sf::RenderWindow &amp;renderer);

-void keyPressed(sf::Keyboard::Key);

-void setHighScore(int tab[4]);

-void getHighScore(int tab[4]);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>530</x>
      <y>600</y>
      <w>270</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>Sculptor
--


--
-bool isGameOver</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1330</x>
      <y>660</y>
      <w>210</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>SceneryRectangleBasic
--


--
-void setNewColor
         (sf::Color newcolor);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>650</x>
      <y>30</y>
      <w>250</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1030</x>
      <y>110</y>
      <w>30</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1190</x>
      <y>30</y>
      <w>270</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;250.0;120.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1080</x>
      <y>820</y>
      <w>200</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>CloudBossN
--


--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>730</y>
      <w>130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1230</x>
      <y>460</y>
      <w>140</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>120.0;10.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>790</x>
      <y>160</y>
      <w>520</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>500.0;20.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1420</x>
      <y>460</y>
      <w>40</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>20.0;10.0;10.0;200.0</additional_attributes>
  </element>
</diagram>
